% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/format_df.R
\name{format_df}
\alias{format_df}
\title{Format Data Frame}
\usage{
format_df(
  data,
  format = NULL,
  x_col = NULL,
  y_col = NULL,
  site_id_col = NULL,
  species_col = NULL,
  value_col = NULL,
  sp_col_range = NULL,
  extra_cols = c("coordinateUncertaintyInMeters", "recordedBy", "eventDate", "date",
    "day", "month", "year")
)
}
\arguments{
\item{data}{Input data frame containing biodiversity data.}

\item{format}{Character specifying the format of the data. One of:
\itemize{
\item "long": Data is in long format with \code{species_col} and \code{value_col}.
\item "wide": Data is in wide format with species columns starting with \code{sp_}.
If NULL, the function will attempt to detect the format automatically.
}}

\item{x_col}{Column name for x-coordinates (longitude). If NULL, will be detected.}

\item{y_col}{Column name for y-coordinates (latitude). If NULL, will be detected.}

\item{site_id_col}{Column name for site identifiers. If NULL, will be created.}

\item{species_col}{Column name for species names (required for long format). If NULL, will be detected.}

\item{value_col}{Column name for species values (e.g., presence/absence or abundance; required for long format). If NULL, will be detected.}

\item{sp_col_range}{Numeric range specifying species columns in wide format. If NULL, will be detected.}

\item{extra_cols}{Character vector of additional columns to retain in the output (default: common metadata columns).}
}
\value{
A list with the following elements:
\itemize{
\item \code{site_obs}: A data frame of site-level observations in long format.
\item \code{site_sp}: A data frame of site-level data in wide format.
}
}
\description{
This function formats biodiversity data into long or wide format for further analysis.
}
\examples{
# Example for long format data
long_data <- data.frame(
  x = c(10, 10, 20),
  y = c(50, 50, 60),
  species = c("sp1", "sp2", "sp1"),
  pa = c(1, 1, 0),
  coordinateUncertaintyInMeters = c(100, 100, 200)
)
result <- format_df(data = long_data, value_col = 'pa',format = "long")
print(result$site_obs)
print(result$site_sp)

# Example for wide format data
wide_data <- data.frame(
  x = c(10, 10, 20),
  y = c(50, 50, 60),
  species1 = c(1, 1, 0),
  species2 = c(2, 2, 1),
  recordedBy = c("A", "B", "A"),
  eventDate = c("2024-01-01", "2024-01-02", "2024-01-03")
)
w_result <- format_df(data = wide_data, format = "wide", sp_col_range = 3:4)
print(w_result$site_sp)
}
